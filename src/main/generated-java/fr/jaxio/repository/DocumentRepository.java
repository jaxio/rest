/*
 * (c) Copyright 2005-2013 JAXIO, http://www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to use Celerio within your company? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Template pack-backend-jpa:src/main/java/project/repository/Repository.e.vm.java
 */
package fr.jaxio.repository;

import javax.inject.Inject;
import javax.inject.Named;
import javax.inject.Singleton;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.transaction.annotation.Transactional;
import fr.jaxio.dao.DocumentDao;
import fr.jaxio.domain.Document;
import fr.jaxio.repository.support.GenericRepository;

/**
 * Note: you may use multiple DAO from this layer.
 */
@Named
@Singleton
public class DocumentRepository extends GenericRepository<Document, String> {

    private static final Logger log = LoggerFactory.getLogger(DocumentRepository.class);

    // required by cglib to create a proxy around the object as we are using the @Transactional annotation
    protected DocumentRepository() {
        super();
    }

    @Inject
    public DocumentRepository(DocumentDao documentDao) {
        super(documentDao);
    }

    @Override
    public Document getNew() {
        return new Document();
    }

    @Override
    public Document getNewWithDefaults() {
        Document result = getNew();
        result.initDefaultValues();
        return result;
    }

    @Override
    @Transactional
    public void delete(Document document) {
        if (document == null) {
            log.debug("Skipping deletion for null model!");
            return;
        }

        // remove the reference from the associated owner
        if (document.getOwner() != null) {
            document.getOwner().removeEdoc(document);
        }

        super.delete(document);
    }
}